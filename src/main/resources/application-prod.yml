spring:
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    show-sql: true
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true
    open-in-view: false

  data:
    redis:
      port: ${REDIS_PORT}
      host: ${REDIS_HOST}
    web:
      pageable:
        one-indexed-parameters: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${OAUTH_GOOGLE_ID}
            client-secret: ${OAUTH_GOOGLE_SECRET}
            scope: [ email, profile ]
            redirect-uri: ${OAUTH_GOOGLE_REDIRECT}
          naver:
            client-id: ${OAUTH_NAVER_ID}
            client-secret: ${OAUTH_NAVER_SECRET}
            redirect-uri: ${OAUTH_NAVER_REDIRECT}
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
            client-name: Naver
          kakao:
            client-id: ${OAUTH_KAKAO_ID}
            redirect-uri: ${OAUTH_KAKAO_REDIRECT}
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
              - account_email
            client-name: Kakao
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

logging:
  level:
    org.springframework.cache: trace
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

jwt:
  secret: ${JWT_SECRET}
  access-expiration: ${JWT_ACCESS_EXP}
  refresh-expiration: ${JWT_REFRESH_EXP}

PSP:
  toss:
    secretKey: ${TOSS_SECRET_KEY}
    url: ${TOSS_API_URL}

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    s3:
      bucket: ${AWS_S3_BUCKET}
    region:
      static: ${AWS_REGION}
    stack:
      auto: 'false'

feign:
  client:
    config:
      tossFeignClient:
        connectTimeout: 3000
        readTimeout: 5000

app:
  oauth2:
    redirect-uri: ${APP_OAUTH2_REDIRECT_URI}

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: "never"
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true