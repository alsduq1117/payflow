spring:
  datasource:
    url: jdbc:mysql://localhost:3306/test
    username: root
    password: 1234
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    show-sql: true
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true
    open-in-view: false

  data:
    redis:
      port: 6379
      host: localhost

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 981882976984-c6f0re8nfjsjgui8nb1l14uh613t3se1.apps.googleusercontent.com
            client-secret: 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
            scope: [ email, profile ]
            redirect-uri: "http://localhost:8080/login/oauth2/code/google"
          naver:
            client-id: 3Gxl0bqtzcEerlZ4iull
            client-secret: JdLbuLGqBv
            redirect-uri: "http://localhost:8080/login/oauth2/code/naver"
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
            client-name: Naver
          kakao:
            client-id: 939f25f065f8efa488a33aa96d109dce
            redirect-uri: "http://localhost:8080/login/oauth2/code/kakao"
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
              - account_email
            client-name: Kakao
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id



logging:
  level:
    org.springframework.cache: trace
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE


jwt:
  secret: 6gCPYVZ7kAW7UiMrRjThGoiweJcUxA3e
  access-expiration: 3600000 # 1시간 (밀리초)
  refresh-expiration: 2592000000 # 30일 (밀리초 단위)


PSP:
  toss:
    secretKey: test_gsk_docs_OaPz8L5KdmQXkzRz3y47BMw6
    url: https://api.tosspayments.com


cloud:
  aws:
    credentials:
      access-key: AKIA4VBL553M4KWHTLPU
      secret-key: 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
    s3:
      bucket: payflow-uploads
    region:
      static: ap-northeast-2
    stack:
      auto: 'false'

feign:
  client:
    config:
      tossFeignClient:
        connectTimeout: 3000  # 요청이 3초 안에 연결되지 않으면 에러
        readTimeout: 5000

app:
  oauth2:
    redirect-uri: http://localhost:3000/oauth2/redirect
#resilience4j.thread-pool-bulkhead:
#  instances:
#    paymentRecovery:
#      maxThreadPoolSize: 2
#      coreThreadPoolSize: 1
#      queueCapacity: 5