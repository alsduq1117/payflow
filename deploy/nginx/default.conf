server {
  listen 80;
  server_name _;

  root /usr/share/nginx/html;
  index index.html;

  location = /oauth2/redirect {
    try_files $uri /index.html;
  }

  location ^~ /oauth2/authorization/ {
    proxy_pass         http://backend:8080/oauth2/authorization/;
    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location ^~ /login/oauth2/ {
    proxy_pass         http://backend:8080/login/oauth2/;
    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location /api/ {
    proxy_pass         http://backend:8080;
    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   Authorization $http_authorization;
  }

  location = /grafana {
    return 301 /grafana/;
  }

  location /grafana/ {
    proxy_pass       http://grafana:3000;  # docker 네트워크의 grafana 서비스
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location / {
    try_files $uri $uri/ /index.html;
  }
}